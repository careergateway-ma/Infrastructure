
services:
  company-service:
    build:
      context: '../company-service'
      dockerfile: Dockerfile
    container_name: company-service
    restart: unless-stopped
    ports:
      - "50051:50051"
    depends_on:
      - company-db
      - career-gateway-redis
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://company-db:5432/company_db
      SPRING_DATASOURCE_USERNAME: company_user
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_DATASOURCE_DRIVER-CLASS-NAME: org.postgresql.Driver
      SPRING_CACHE_TYPE: redis
      SPRING_DATA_REDIS_HOST: career-gateway-redis
      SPRING_DATA_REDIS_PORT: 6379
    networks:
      - backend-network

  company-db:
    image: postgres:latest
    container_name: company-db
    restart: unless-stopped
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: company_db
      POSTGRES_USER: company_user
      POSTGRES_PASSWORD: password
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - company_postgres_data:/var/lib/postgresql/data
    networks:
      - backend-network


  auth-service:
    build:
      context: '../auth-service'
      dockerfile: Dockerfile
    container_name: auth-service
    restart: unless-stopped
    ports:
      - "50052:50052"
    depends_on:
      - auth-db
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://auth-db:5432/auth_db
      SPRING_DATASOURCE_USERNAME: auth_user
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_DATASOURCE_DRIVER-CLASS-NAME: org.postgresql.Driver
      JWT_SECRET: 0508f2dc-56d5-465e-8e0b-1a841aaa01ce
      JWT_EXPIRATION: 3600000
    networks:
      - backend-network


  auth-db:
    image: postgres:latest
    container_name: auth-db
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: auth_db
      POSTGRES_USER: auth_user
      POSTGRES_PASSWORD: password
    volumes:
      - auth_postgres_data:/var/lib/postgresql/data
    networks:
      - backend-network

  gateway-service:
    build:
      context: '../api-gateway'
      dockerfile: Dockerfile
    container_name: gateway-service
    restart: unless-stopped
    environment:
      COMPANY_SERVICE_HOST: company-service
      COMPANY_SERVICE_PORT: 50051
      AUTH_SERVICE_HOST: auth-service
      AUTH_SERVICE_PORT: 50052
    ports:
      - "8080:8080"
    depends_on:
      - company-service
      - auth-service
    networks:
      - backend-network

  career-gateway-redis:
    image: redis:latest
    container_name: career-gateway-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    environment:
      COMPANY_SERVICE_HOST: company-service
      COMPANY_SERVICE_PORT: 50051
    networks:
      - backend-network
    command: ["redis-server", "--appendonly", "yes"]

networks:
  backend-network:
    driver: bridge

volumes:
  auth_postgres_data:
  company_postgres_data: